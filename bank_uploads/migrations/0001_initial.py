# Generated by Django 5.2.4 on 2025-08-09 14:54

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('banks', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankUploadBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255)),
                ('uploaded_count', models.PositiveIntegerField(default=0)),
                ('skipped_count', models.PositiveIntegerField(default=0)),
                ('errors_count', models.PositiveIntegerField(default=0)),
                ('balance_continuity_in_file', models.BooleanField(default=True)),
                ('previous_ending_balance_match', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_upload_batches', to='banks.bankaccount')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_upload_batches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BankTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateField()),
                ('narration', models.TextField()),
                ('credit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('debit_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('balance_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('utr_number', models.CharField(blank=True, max_length=100, null=True)),
                ('signed_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('dedupe_key', models.CharField(db_index=True, editable=False, max_length=64)),
                ('source', models.CharField(default='BANK', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_upload_transactions', to='banks.bankaccount')),
                ('upload_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='bank_uploads.bankuploadbatch')),
            ],
            options={
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='bankuploadbatch',
            index=models.Index(fields=['bank_account', 'created_at'], name='bank_upload_bank_ac_84ce4b_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransaction',
            index=models.Index(fields=['bank_account'], name='bank_upload_bank_ac_4790d6_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransaction',
            index=models.Index(fields=['bank_account', 'transaction_date'], name='bank_upload_bank_ac_58decd_idx'),
        ),
        migrations.AddIndex(
            model_name='banktransaction',
            index=models.Index(fields=['utr_number'], name='bank_upload_utr_num_cae1d3_idx'),
        ),
        migrations.AddConstraint(
            model_name='banktransaction',
            constraint=models.UniqueConstraint(condition=models.Q(('is_deleted', False)), fields=('bank_account', 'dedupe_key'), name='uniq_txn_per_account_dedupekey_active'),
        ),
    ]
